name: Linting and Unit Testing on Push

on: [push]

jobs:
  flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps: # Source taken from https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov mypy black
        if [ -f code/collection/requirements.txt ]; then pip install -r code/collection/requirements.txt; fi
        if [ -f code/preprocessing/requirements.txt ]; then pip install -r code/preprocessing/requirements.txt; fi
        if [ -f code/preprocessing2/requirements.txt ]; then pip install -r code/preprocessing2/requirements.txt; fi
        if [ -f code/preprocessing_final/requirements.txt ]; then pip install -r code/preprocessing_final/requirements.txt; fi

    - name: Lint with Flake8 # step taken from https://gist.github.com/riccardo1980/11a92a0bfac23306b91d7ea7b4104605
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format Code with Black
      run: |
        black . --check --diff

    - name: Type Check with Mypy
      run: |
        mypy code/collection/handler.py code/preprocessing/preprocessing_handler.py code/preprocessing2/preprocessing2_handler.py code/preprocessing_final/preprocessing_final_handler.py code/retrieval/handler.py

    - name: Run tests with Pytest
      run: |
        pytest --cov=code.collection --cov=code.preprocessing --cov=code.preprocessing2 --cov=code.preprocessing_final --cov=code.retrieval --cov-report=html --cov-fail-under=85
        coverage html

    - name: html to pdf
      uses: fifsky/html-to-pdf-action@master
      with:
        htmlFile: ./htmlcov/index.html
        outputFile: ./pytest-coverage.pdf
        pdfOptions: '{"format": "A4", "margin": {"top": "10mm", "left": "10mm", "right": "10mm", "bottom": "10mm"}}'

    - name: Upload Coverage Artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: |
          pytest-coverage.pdf